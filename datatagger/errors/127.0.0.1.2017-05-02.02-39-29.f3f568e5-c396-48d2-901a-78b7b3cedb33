(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'DAL' object has no attribute 'Label'"
p3
sS'layer'
p4
S'/home/mohit/research/web2py/applications/datatagger/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\n\n@auth.requires_login()\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    if request.vars.msg:\n        msg = T(request.vars.msg)\n    else:\n        msg = T("Greetings "+str(auth.user.first_name)+\'!\')\n    response.flash = msg\n    return dict(message=T(\'Welcome to Data Tagger!\'))\n\n@auth.requires_login()\ndef view_annot():\n    if not request.vars.page:\n        page = 1\n    else:\n        page = int(request.vars.page)\n\n    start = (page-1)*10\n    end = page*10\n\n    annots = db((db.Images.id==db.Labels.img_id)).select(db.Images.ALL, db.Labels.ALL, orderby=db.Labels.entry_at, limitby=(start, end))\n    return locals()\n\n@auth.requires_login()\ndef annot_image():\n    form = SQLFORM(db.Label)\n    if form.process(session=None, formname=\'annotate\').accepted:\n        response.flash = \'Image Annotation : Success\'\n        redirect(URL(\'default\', \'annot_image\'))\n    elif form.errors:\n        response.flash = \'Image Annotation : Failed : Check for errors\'\n\n    if request.vars.img_id:\n        img_id = int(request.vars.img_id)\n    else:\n        img_id = -1\n        all_imgs = [i[\'id\'] for i in db(db.Images.id>0).select(db.Images.id)]\n        user_imgs = [i[\'id\'] for i in db(db.Labels.entry_by==auth.user_id).select(db.Labels.img_id)]\n        for im_id in all_imgs:\n            if im_id not in user_imgs:\n                img_id = im_id\n                break\n\n    return locals()\n\n@auth.requires_login()\ndef refresh_data():\n    import os\n    image_path = \'/home/mohit/research/web2py/applications/datatagger/static/data/arabic\'\n    images = [im for im in os.listdir(image_path) if im.endswith(\'.jpg\')]\n    \n    ctr = 0\n    db_images = [i[\'img_name\'] for i in db(db.Images.id>0).select()]\n    for img in images:\n        if img not in db_images:\n            db.Images.insert(img_name=img, img_path=image_path.split(\'static\')[-1])\n            ctr += 1\n\n    db.commit()\n    redirect(URL(\'default\',\'index\', vars={\'msg\':\'database updated : %s new images\' % str(ctr)}))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(annot_image)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/mohit/research/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/mohit/research/web2py/applications/datatagger/controllers/default.py", line 117, in <module>\n  File "/home/mohit/research/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/mohit/research/web2py/gluon/tools.py", line 4241, in f\n    return action(*a, **b)\n  File "/home/mohit/research/web2py/applications/datatagger/controllers/default.py", line 42, in annot_image\n    form = SQLFORM(db.Label)\n  File "/home/mohit/research/web2py/gluon/packages/dal/pydal/base.py", line 921, in __getattr__\n    return BasicStorage.__getattribute__(self, key)\nAttributeError: \'DAL\' object has no attribute \'Label\'\n'
p11
s.